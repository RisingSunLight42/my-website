/* Mettre margin et padding à 0 permet manipuler le margin et padding de tous les enfants de la page à 0.
    box-sizing: border-box permet d'éviter que quand l'on augmente la taille d'un élément, il le fasse vers l'extérieur et agrandisse la page.*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.masque-overflow-y {
    overflow-y: hidden;
}

main {
    animation: mainAnim 1.5s ease-out;
}

@keyframes mainAnim {
    from {
        opacity: 0;
        transform: translateX(-100%);
    }
    to {
        opacity: 1;
        transform: translateX(0%);
    }
}

/** Partie navigation */

nav {
    display: flex;
    justify-content: space-around;
    align-items: stretch;
    min-height: 8vh;
    opacity: 0;
    color: #f1f1f1;
    background-color: rgba(34, 44, 148, 58);
    font-family: Georgia, "Times New Roman", Times, serif;
}

.navAnim {
    animation: animNav 1.5s;
    opacity: 1;
}

@keyframes animNav {
    from {
        opacity: 0;
        transform: translateY(-100%);
    }
    to {
        opacity: 1;
        transform: translateY(0%);
    }
}

.titre-page {
    display: flex;
    letter-spacing: 4px;
    font-size: 20px;
    align-items: center;
}

.nav-links {
    display: flex;
    justify-content: space-around;
    align-items: stretch;
    list-style: none;
    width: 50%;
}

.nav-links li {
    display: flex;
    align-items: stretch;
}

.nav-links a {
    display: flex;
    align-items: center;
    color: #f1f1f1;
    letter-spacing: 2px;
    font-weight: bold;
    font-size: 20px;
    text-decoration: none;
    padding: 5px 5px;
}

.nav-links a:hover {
    background-color: rgba(20, 34, 138, 28);
}

.burger {
    display: none;
}

.conteneur-burger {
    display: flex;
    align-items: center;
}

.burger div {
    width: 30px;
    height: 4px;
    margin: 5px;
    background-color: #f1f1f1;
    transition: all 0.3s ease;
}

@media screen and (max-width: 768px) {
    /** Partie navigation */
    .masque-overflow-x {
        /* 
        À cause du tag meta viewport, les balises html et body sont ignorées sur téléphone.
        Il faut donc appliquer un overflow-x hidden et une position relative sur un div situé dans le body*/
        overflow-x: hidden;
        position: relative;
    }
    .nav-links {
        position: absolute;
        right: 0px;
        height: 87vh;
        top: 8vh;
        background-color: rgba(34, 44, 148, 58);
        display: flex;
        flex-direction: column;
        align-items: stretch; /* Met en stretch pour que les items à l'intérieur de nav links prenne toute la place*/
        width: 50%;
        transform: translateX(
            100%
        ); /* Permet de décaler vers la droite de 100% de la taille, masquant l'élément */
        transition: transform 0.75s ease-in;
    }
    /* Masque les éléments de la liste, car on va les faire apparaître avec une animation.
    Rajout que les conteners de list sont en flex direction column et que leurs items doivent prendre toute la place*/
    .nav-links li {
        opacity: 0;
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    /* Met les liens en flex (prennent donc toute la place) et les alignent au centre */
    .nav-links a {
        display: flex;
        justify-content: center;
    }

    .burger {
        display: block;
        cursor: pointer;
    }
}

/* Sert quand le burger sera cliqué -> la classe de nav-links deviendra active pour faire apparaître les éléments de navigation*/
.nav-active {
    transform: translateX(0%);
}

/* La partie ci-dessous permet de réaliser une animation grâce à JS */
@keyframes navLinkFade {
    from {
        opacity: 0;
        transform: translateX(50px);
    }
    to {
        opacity: 1;
        transform: translateX(0px);
    }
}

/* Aspect des lignes du burger quand le burger est cliqué */

.toggle .line1 {
    transform: rotate(-45deg) translate(-7px, 6px);
}

.toggle .line2 {
    opacity: 0;
}

.toggle .line3 {
    transform: rotate(45deg) translate(-7px, -6px);
}

/** Partie corps de la page */

body {
    background-color: rgba(110, 110, 245, 100);
}

main {
    margin: 1.5rem 30% 6vh 30%;
    text-align: justify;
}

h1,
h2 {
    text-align: center;
    margin-top: 20px;
    margin-bottom: 20px;
}

iframe {
    width: 100%;
    height: 315px;
}

.galerie .slider {
    padding: 10px;
}

.slider figure {
    display: none;
    text-align: center;
    height: fit-content;
}

.slider figure img {
    width: 100%;
    max-height: 50vh;
    object-fit: contain;
}

figure.active {
    display: block;
    animation: fade 1.5s;
}

@keyframes fade {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

.container-bouton {
    width: 100%;
    height: auto;
    display: flex;
    padding-bottom: 10px;
}

.bouton-nav {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-grow: 1; /* Permet de dire de prendre tout l'espace disponible restant */
    text-align: center;
    font-size: 25px;
    height: 3vh;
    margin: 0 15px;
    cursor: pointer;
    background: rgba(34, 44, 148, 58);
    color: #f1f1f1;
    border: 1px solid rgb(53, 53, 153);
    box-shadow: 0 10px 10px rgba(11, 34, 235, 0.349); /* Rajoute une sorte d'ombre */
    border-radius: 20px; /* arrondis les bords */
}

.bouton-nav:hover {
    background: rgba(20, 34, 138, 28);
}
/* Création de la barre centrale de la flèche*/
.fleche {
    width: 25%;
    height: 2px;
    background: #f1f1f1;
    position: relative;
}
/* Crée les pseudos éléments pour faire la pointe de la flèche, content est nécessaire pour qu'ils apparaissent*/
.fleche::before,
.fleche::after {
    content: "";
    width: 10px;
    height: 2px;
    background: #f1f1f1;
    position: absolute;
    right: 0;
    top: 0;
}

.fleche::before {
    transform: rotate(45deg);
    transform-origin: right bottom;
}
.fleche::after {
    transform: rotate(-45deg);
    transform-origin: right top;
}

.fleche.gauche {
    transform: rotate(180deg);
}
@media screen and (max-width: 768px) {
    /** Modification des marges de l'écran lorsque sa taille est plus faible */
    main {
        margin: 1.5rem 15% 6vh 15%;
    }
    .slider figure img {
        max-height: 30vh;
    }
}

/* On peut utiliser plusieurs combinateurs.
Dans cet exemple, on colore les balises em lorsqu'elles suivent directement une balise image
ET qu'elles sont enfant d'une balise de lien.*/
a {
    color: rgba(20, 14, 178, 100);
    text-decoration: none;
}

/** Gestion de la partie des choses aimées */

.conteneur_choses_aimees {
    height: fit-content; /* Fait en sorte que la hauteur colle au contenu */
    min-height: 25vh;
    background-color: rgba(110, 123, 255, 100);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    position: relative; /* Indication d'une position relative sans déplacement pour pouvoir mettre une position absolute sur les contenus sans incidents*/
}

.conteneur_onglets {
    width: 100%;
    height: 5vh; /* Fixe une taille à 5vh pour que les cases soient toujours grandes*/
    display: flex;
    border-bottom: 1px solid #333;
}

.onglets {
    /* Propriété permettant de forcer à se répartir équitablement l'espace : 0 = prend tout, 1 = adapte toi,
    avec la combinaison de 0 et de 1, on permet une répartition équitable en tier*/
    display: flex;
    flex: 1 1 0;
    justify-content: center;
    align-items: center;
    font-size: 22px;
    padding: 5px;
    font-weight: 700; /* Augmente le gras */
}

/* hover sur les onglets qui ne sont pas affichés (pour sous entendre qu'ils sont cliquables)  */
.onglets:hover:not(.ongletActif) {
    background: rgb(34, 44, 148);
    color: #f1f1f1;
    cursor: pointer;
}

.onglets:not(:nth-child(3)) {
    /* Permet d'ajouter une bordure à droite sauf pour l'enfant 3 (le dernier) */
    border-right: 1px solid #333;
}

.contenu {
    width: 100%;
    position: absolute;
    opacity: 0; /* Masque les contenus, le contenu sera affiché que s'il a la classe contenuActif */
}

.contenu h3 {
    padding: 15px 20px 10px 20px; /* Ajout d'un padding pour que ce soit plus propre */
}

.contenu hr {
    /* Stylise le séparateur pour qu'il soit plus joli*/
    width: 25%;
    height: 2px;
    margin-left: 20px;
    background: #000;
    border: none;
}

.contenu p {
    line-height: 1.25em;
    padding: 20px;
}

/** Animation des onglets et contenus */
.ongletActif {
    background: rgba(20, 34, 138, 28);
    color: #f1f1f1;
    transition: all 0.3s ease; /* Permet de faire une jolie transition */
}

.contenuActif {
    position: relative; /* Met la position en relative pour que l'élément soit dans le flux et que la taille du conteneur s'adapte */
    animation: fade 0.5s forwards; /* Appelle l'animation fade définie en keyframe plus haut */
}

/** Partie formulaire et avis */

/* focus désigne lorsque l'objet est sélectionné */
input:focus {
    background-color: rgb(226, 214, 214);
}

#choix_avis {
    cursor: pointer;
}

form {
    display: flex;
    flex-direction: column;
    text-align: center;
    align-items: stretch;
    margin: auto;
}

form > input {
    display: flex;
    margin: auto;
}

form > select {
    margin: auto;
}

/* background: none permet de retirer le background par défaut des boutons */
button {
    display: block;
    margin: 1rem;
    padding: 0.5rem 1rem;
    background: rgba(34, 44, 148, 58);
    border: 0.15rem solid rgb(53, 53, 153);
    color: #f1f1f1;
    font-size: 0.8rem;
    border-radius: 0.7rem;
}

/* hover désigne lorsque l'objet est survolé */
button:hover {
    cursor: pointer;
    background: rgba(20, 34, 138, 28);
}

footer {
    display: flex;
    width: 100%;
    height: 5vh;
    align-items: center;
    justify-content: center;
    text-align: center;
    position: fixed;
    bottom: -10%;
    background-color: rgba(224, 198, 101, 88);
}

.affichageFooter {
    animation: animFooter 1.5s ease;
    bottom: 0%;
}

@keyframes animFooter {
    from {
        bottom: -10%;
        opacity: 0;
    }
    to {
        bottom: 0%;
        opacity: 1;
    }
}
