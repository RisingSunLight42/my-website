/* Mettre margin et padding à 0 permet manipuler le margin et padding de tous les enfants de la page à 0.
    box-sizing: border-box permet d'éviter que quand l'on augmente la taille d'un élément, il le fasse vers l'extérieur et agrandisse la page.*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/** Partie navigation */

nav {
    display: flex;
    justify-content: space-around;
    align-items: center;
    min-height: 8vh;
    background-color: aquamarine;
    font-family: Georgia, "Times New Roman", Times, serif;
}

.titre-page {
    letter-spacing: 4px;
    font-size: 20px;
}

.nav-links {
    display: flex;
    justify-content: space-around;
    list-style: none;
    width: 50%;
}

.nav-links a {
    color: black;
    letter-spacing: 2px;
    font-weight: bold;
    font-size: 20px;
    text-decoration: none;
}

.burger {
    display: none;
}

.burger div {
    width: 30px;
    height: 4px;
    margin: 5px;
    background-color: aliceblue;
}

@media screen and (max-width: 768px) {
    body {
        overflow-x: hidden; /* Masque le fait qu'il y a des éléments en + sur l'axe x*/
    }
    .nav-links {
        position: absolute;
        right: 0px;
        height: 92vh;
        top: 8vh;
        background-color: aquamarine;
        display: flex;
        flex-direction: column;
        align-items: center; /* Vu que la direction a changé en colonne, ce sont des objets séparés, on utilise donc align-items*/
        width: 50%;
        transform: translateX(
            100%
        ); /* Permet de décaler vers la droite de 100% de la taille, masquant l'élément */
    }
}

/** Partie corps de la page */

main,
footer {
    margin-top: 1.5rem;
    margin-left: 1.5rem;
    margin-bottom: 1.5rem;
}

label {
    display: block;
}

/* Le combinateur > permet de cible l'enfant du parent sélectionné, tandis que + l'élément suivant
Dans le cas que j'ai utilisé, .galerie h2 fonctionne aussi */
.galerie > h2 {
    color: rgb(226, 83, 27);
}

/* On peut utiliser plusieurs combinateurs.
Dans cet exemple, on colore les balises em lorsqu'elles suivent directement une balise image
ET qu'elles sont enfant d'une balise de lien.*/
a > img + em {
    color: rgb(172, 105, 60);
}

.choses-aimees ul {
    margin-left: 15px;
}

.classement {
    margin-left: 5px;
}

/* :nth-child sélectionne l'enfant avec le numéro indiqué, on peut préciser quel type d'enfant devant les : 
Si on ne précise pas, il va chercher le nombre de classe (ou autre) précisé.
Par exemple, j'ai 3 classes "classement", si je fais .classement :nth-child(3), il va colorer la 3e balises avec la classe classement */
.classement li:nth-child(1) {
    color: rgb(12, 86, 170);
}

.retour-visiteur h2 {
    color: darkcyan;
}

/* focus désigne lorsque l'objet est sélectionné */
input:focus {
    background-color: rgb(226, 214, 214);
}

#choix_avis {
    cursor: pointer;
}

/* background: none permet de retirer le background par défaut des boutons */
button {
    display: block;
    margin: 1rem;
    padding: 0.5rem 1rem;
    background: rgb(79, 79, 218);
    border: 0.15rem solid rgb(53, 53, 153);
    color: white;
    font-size: 0.8rem;
    border-radius: 0.7rem;
}

/* hover désigne lorsque l'objet est survolé */
button:hover {
    cursor: pointer;
    background: rgb(60, 60, 238);
}

footer {
    position: fixed;
    bottom: 0%;
    margin-bottom: 0.1rem;
}
